// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
   binaryTargets = ["native", "debian-openssl-3.0.x"]
}

// ðŸ§‘ UsuÃ¡rio (Admin do SaaS)
model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  plans     Plan[]
  clients   Client[]
}

// ðŸ’ˆ Planos criados por cada usuÃ¡rio
model Plan {
  id        Int       @id @default(autoincrement())
  planName  String
  price     Float
  services  String    // vocÃª pode armazenar JSON depois, se quiser
  createdAt DateTime  @default(now())

  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  clients   Client[]
}

// ðŸ‘¥ Clientes de cada usuÃ¡rio
model Client {
  id        Int       @id @default(autoincrement())
  name      String
  phone     String
  email     String?   // opcional
  createdAt DateTime  @default(now())

  userId    Int
  user      User      @relation(fields: [userId], references: [id])

  planId    Int
  plan      Plan      @relation(fields: [planId], references: [id])

  appointments Appointment[]
}

// ðŸ“… Agendamentos
model Appointment {
  id        Int       @id @default(autoincrement())
  date      DateTime
  status    String    @default("pendente")
  notes     String?

  createdAt DateTime  @default(now())

  clientId  Int
  client    Client    @relation(fields: [clientId], references: [id])
}
